// <auto-generated />
using System;
using Custom.EntityFramework.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Skoruba.IdentityServer4.Admin.Api.Data.Migrations.Custom
{
    [DbContext(typeof(CustomDbContext))]
    [Migration("20190701082546_CustomDbInit")]
    partial class CustomDbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("PermissionAttribute");

                    b.Property<byte>("PermissionStatus");

                    b.Property<long>("ResourceId");

                    b.Property<string>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Resource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Attribute");

                    b.Property<string>("MobileAttribute");

                    b.Property<string>("MobileResourceValue");

                    b.Property<long?>("ParentId");

                    b.Property<string>("ResourceTitle");

                    b.Property<byte>("ResourceType");

                    b.Property<string>("ResourceValue");

                    b.Property<bool>("ShowOnMobile");

                    b.Property<byte>("UIResourceType");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Skoruba.IdentityServer4.Admin.EntityFramework.Shared.Entities.Identity.UserIdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("UserIdentityRole");
                });

            modelBuilder.Entity("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Permission", b =>
                {
                    b.HasOne("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Skoruba.IdentityServer4.Admin.EntityFramework.Shared.Entities.Identity.UserIdentityRole", "UserIdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Resource", b =>
                {
                    b.HasOne("Skoruba.IdentityServer4.Admin.Custom.EntityFramework.Entities.Resource", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });
#pragma warning restore 612, 618
        }
    }
}
